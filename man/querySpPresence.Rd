% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/querySpPresence.R
\name{querySpPresence}
\alias{querySpPresence}
\title{Tables of species presence by conglomerate.}
\usage{
querySpPresence(database, noms, malla = NULL)
}
\arguments{
\item{database}{Connection to an existing postgresql or sqlite database (as
returned by \code{\link[dplyr]{src_postgres}} or
\code{\link[dplyr]{src_sqlite}}.}

\item{noms}{String indicating the species names to look for (ex:
"vaca|equus")}

\item{malla}{Optional parameter indicating the coordinates of the
conglomerates, malla most be a data.frame with columns cgl_id, lng, lat,
where cgl_id is the conglomerate id (class double), lng is longitude and
lat is latitude. If \code{malla} is left to NULL the function will return
the coordinates from the conglomerate Center specified in the database.}
}
\value{
A list with 2 elements (both have class \code{data.frame}):
  \enumerate{
    \item The first element is indexed by conglomerate id (\emph{Id}) and
     includes only the conglomerates where the species specified by noms were
     found, its columns are: \emph{Estado}, \emph{Municipio}, and
     \emph{Uso suelo}, it also includes an indicator of
     the kind of records found, this is, if records belong to invaders
     (\emph{EI}), footprints/feces (\emph{HE}), opportunistic invaders
     (\emph{EI ex}), opportunistic footprints/feces, opportunistic
     specimens/remains (\emph{ER ex}) or camera trap (\emph{CÃ¡mara}).
   \item The second element is indexed by conglomerate id (\emph{Id}) and
     includes only the conglomerates where the species specified by noms were
     found, the columns are the coordinates of the conglomerate
     (\emph{lng, lat}), the coordinates can be supplied by the user (throught
     the parameter \code{malla}) or taken from the database.
   }
}
\description{
Search for species records in Invaders, Footprints, Specimens and Camera
tables, the results are indexed by conglomerate.
}
\examples{
# connect to sqlite database (snmb)
database <- dplyr::src_sqlite(system.file("extdata", "snmb.sqlite",
  package = "querysnmb"))
files_images_videos <- queryFiles(database, file_type = "images",
  cgl_id = "405", year_visit = 2014)
\dontrun{
# connect to postgreSQL database (snmb)
PASS_SNMB = Sys.getenv("PASS_SNMB")
database <- dplyr::src_postgres(dbname = "snmb", host = "dbms", user =
  "snmb", password = PASS_SNMB)
files_acoustic_name <- queryFiles(database, file_type = "recordings",
  ultrasonic = FALSE, year_visit = 2014, original = TRUE)
}
}

